2+2
2+2
print "hello world"
print ("hello world")
x<-1:5
x
y<-c(6,7,8,9,10)
y
x+y
x*2
x<-0:10
x
y<-c(5,4,1,6,7,2,2,3,2,8)
y
ls
ls()
browseurl("http://cran.stat.ucla.edu/web/packages/available_packages")
browseURL("http://cran.stat.ucla.edu/web/packages/available_packages")
install.packages("C:/Users/Cynthia Li/Downloads/Rcpp11_3.1.2.0.zip", repos = NULL)
swirl()
swirl()
library(swirl)
swirl()
webfile<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(webfile,destfile=".file.csv")
getwd()
data<-read.csv(.file.csv)
data<-read.csv(".file.csv")
head(data,3)
str(data)
table(data$VAL>=$1,000,000)
head(data$VAL)
table(data$VAL)
View(data)
excel<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(excel,destfile="excel.xlsx")
head(excel,3)
str(excel)
exceldata<-read.xlsx("excel.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
library("xlsx")
library(xlsx)
exceldata<-read.xlsx("excel.xlsx")
library(xlsx)
library(rJava)
install.packages("rJava")
library(rJava)
if (Sys.getenv("JAVA_HOME")!="")<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sys.setenv(JAVA_HOME="")<br>
library(rJava)
if (Sys.getenv("JAVA_HOME")!="")
if (Sys.getenv("JAVA_HOME")!="")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sys.setenv(JAVA_HOME="")
library(rJava)
install.packages("rJava")
library(rJava)
library(rJava)
library(xml)
library(XML)
install.packages("XML")
library(XML)
webfile<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(webfile,useInternal=T)
doc<-xmlTreeParse(webfile,useInternal=TRUE)
doc<-xmlTreeParse(webfile)
webfile<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(webfile)
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version=!is.na())
filter(cran, r_version=!is.na(r_version))
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country, desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
mutate(cran3,size_gb=size_mb/2^10)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
?table
?axis
options(rpubs.upload.method = "internal")
options(rpubs.upload.method = "internal")
setwd("~/Practical ML")
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(rattle)
set.seed(1234)
trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
training <- read.csv(url(trainUrl), na.strings=c("NA","#DIV/0!",""))
testing <- read.csv(url(testUrl), na.strings=c("NA","#DIV/0!",""))
head(training)
trainingset<-trainingset[,colSums(is.na(trainingset)) == 0]
testingset <-testingset[,colSums(is.na(testingset)) == 0]
training<-training[,colSums(is.na(trainingset)) == 0]
testing <-testing[,colSums(is.na(testingset)) == 0]
training<-training[,colSums(is.na(training)) == 0]
testing <-testing[,colSums(is.na(testing)) == 0]
training<-training[,-c(1:7)]
testing <-testing[,-c(1:7)]
dim(training)
dim(testing)
subsamples <- createDataPartition(y=training$classe, p=0.75, list=FALSE)
subTraining <- training[subsamples, ]
subTesting <- training[-subsamples, ]
dim(subTraining)
dim(subTesting)
plot(subTraining$classe, col="blue", main="Bar Plot of "classe" levels in subTraining dataset", xlab="classe levels", ylab="Frequency")
plot(subTraining$classe, col="blue", main="Bar Plot of classe levels in subTraining dataset", xlab="classe levels", ylab="Frequency")
plot(subTraining$classe, col="green", main="Bar Plot of classe levels in subTraining dataset", xlab="classe levels", ylab="Frequency")
plot(subTraining$classe, col="lightgreen", main="Bar Plot of classe levels in subTraining dataset", xlab="classe levels", ylab="Frequency")
model1 <- rpart(classe ~ ., data=subTraining, method="class")
prediction1 <- predict(model1, subTesting, type = "class")
rpart.plot(model1, main="Classification Tree", extra=102, under=TRUE, faclen=0)
confusionMatrix(prediction1, subTesting$classe)
model2 <- randomForest(classe ~. , data=subTraining, method="class")
prediction2 <- predict(model2, subTesting, type = "class")
confusionMatrix(prediction2, subTesting$classe)
predictfinal <- predict(model2, testingset, type="class")
predictfinal
predictfinal <- predict(model2, testing, type="class")
predictfinal
